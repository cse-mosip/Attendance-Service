openapi: 3.0.3
info:
  title: Attendance Service API
  description: |-
    This is the API documentation of Attendance Service (MOSIP).
  version: 1.0.0

#servers:
#  - url: https://attendance.mosip.uom.lk/api/v1

tags:
  - name: Exams
    description: APIs related to exam attendance
  - name: Lectures
    description: APIs related to lecture attendance
  - name: Users
    description:  APIs related to user authentication/registration
  - name: Halls
    description:  APIs related to Halls

paths:
  /admin/exam-attendance/{examId}:
    get:
      tags:
        - Exams
      summary: Get attendance for an exam
      description: This endpoint will provide a list of enrolled students for an exam with their attendance status.
      operationId: getAttendanceForAnExam
      parameters:
        - name: examId
          in: path
          description: ID of the Exam
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Attendance fetched successfully.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Attendance Fetched."
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExamAttendance'
        '400':
          description: Invalid ID supplied or ID missing
        '404':
          description: Exam ID is not found.
      security:
        - access_token: []

  /admin/login:
    post:
      tags:
        - Users
      summary: Authenticate users
      description: Authenticate the users and receive an access token
      operationId: login
      requestBody:
        description: Login details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
        required: true
      responses:
        '200':
          description: Returns the access token after successfully authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenDTO'
        '400':
          description: Invalid inputs/ Missing inputs/ Invalid grant type
        '401':
          description: Invalid credentials
        '404':
          description: Username not found

  /student/lecture-attendance/mark-lecture-attendance:
    post:
      tags:
        - Lectures
      summary: Mark attendance for a lecture
      description: This endpoint will provide functionality for a student to mark their attendance in a lecture and display their details.
      operationId: markLectureAttendance
      requestBody:
        description: Biometric credentials and lecture id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAttendanceRequestDTO'
        required: true
      responses:
        '200':
          description: Attendance marked successfully.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Attendance marked successfully"
                  data:
                    type: object
                    items:
                      $ref: '#/components/schemas/StudentDTO'
        '400':
          description: Invalid or missing details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "INVALID_DATA"
                  message:
                    type: string
                    example: "Attendance already marked"
      security:
        - access_token: [ ]

  /student/exam-attendance-attendance/mark-exam-attendance:
    post:
      tags:
        - Exams
      summary: Mark and verify attendance for a exam
      description: This endpoint will provide functionality for a student to mark and verify their attendance in a exam and display their details.
      operationId: markExamAttendance
      requestBody:
        description: Biometric credentials and exam id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkAttendanceRequestDTO'
        required: true
      responses:
        '200':
          description: Attendance marked successfully.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Attendance marked successfully"
                  data:
                    type: object
                    items:
                      $ref: '#/components/schemas/StudentDTO'
        '400':
          description: Invalid or missing details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "INVALID_DATA"
                  message:
                    type: string
                    example: "Student does not have access to this exam"
      security:
        - access_token: [ ]

  /admin/lecture/start-lecture/{lectureId}:
    get:
      tags:
        - Lectures
      summary: Start a lecture
      description: This endpoint will provide functionality for a admin to start a lecture.
      operationId: startLecture
      parameters:
        - name: lectureId
          in: path
          description: ID of the lecture
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lecture started successfully.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Lecture started successfully"
                  data:
                    type: integer
                    format: int64
                    description: "Lecture id"
                    example: 43872
        '400':
          description: Invalid or missing details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "INVALID_DATA"
                  message:
                    type: string
                    example: "Lecture already started"
      security:
        - access_token: [ ]

  /admin/lecture/end-lecture/{lectureId}:
    get:
      tags:
        - Lectures
      summary: End a lecture
      description: This endpoint will provide functionality for a admin to end a lecture.
      operationId: endLecture
      parameters:
        - name: lectureId
          in: path
          description: ID of the lecture
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lecture ended successfully.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Lecture finished successfully"
                  data:
                    type: integer
                    format: int64
                    description: "Lecture id"
                    example: 43872
        '400':
          description: Invalid or missing details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "INVALID_DATA"
                  message:
                    type: string
                    example: "Invalid lecture"
      security:
        - access_token: [ ]

/admin/hall/getAllHalls:
    get:
      tags:
        - Halls
      summary: Get all of the Halls
      description: This endpoint will provide a list of halls with the conducting lectures and exams of them.
      operationId: getAllHalls
      parameters: none
      responses:
        '200':
          description: Get all lecture halls successfully!.
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: "OK"
                  message:
                    type: string
                    example: "Get all lecture halls successfully!"
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/HallsDTO'
      security:
        - access_token: []

components:
  schemas:
    ExamAttendance:
      type: object
      properties:
        student_id:
          type: string
          example: 190254R
        present:
          type: boolean
          example: true
        marked_time:
          type: string
          format: date-time
          example: 2023-07-15T11:36:50
          nullable: true

    LoginRequestDTO:
      type: object
      properties:
        grant_type:
          type: string
          description: Grant type for authentication (should always be equal to 'password')
          example: password
          nullable: false
        username:
          type: string
          description: Username (Email) of the user
          example: 'user@gmail.com'
          nullable: false
        password:
          type: string
          description: Password of the user
          example: password
          nullable: false

    MarkAttendanceRequestDTO:
      type: object
      properties:
        fingerprint:
          type: string
          format: base64
          description: Fingerprint object of the user
          example: 3edfxref5f4e5cf54tec5eg544gve5tge6vtercf
          nullable: false
        eventId:
          type: integer
          format: int64
          description: ID of lecture or exam
          example: 6513213
          nullable: false

    AccessTokenDTO:
      type: object
      properties:
        access_token:
          type: string
          example: "eeyabcdefgh"
          description: Access token that can be used to access protected endpoints
        expires_in:
          type: integer
          format: int32
          example: 3600
          description: Token expiry time in seconds

    StudentDTO:
      type: object
      properties:
        index_number:
          type: string
          description: University index number
          example: 190429G
          nullable: false
        name:
          type: string
          description: Name of student
          example: D.T.A.W.S.Paranayapa
          nullable: false
        picture:
          type: string
          format: base64
          description: Picture of student
          example: 23xcewjf4wyfcw4093ixh32feefr4f4cgttrbtrbt
          nullable: false
    
    HallsDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of hall
          example: 6513213
          nullable: false
        name:
          type: string
          example: Exam hall 215
        location:
          type: string
          example: Sumanadasa Building
        capacity:
          type: integer
          description: ID of hall
          example: 50
        active:
          type: boolean
          example: true

  securitySchemes:
    access_token:
      type: apiKey
      name: Access-Token
      in: header